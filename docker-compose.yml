services:
  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "kafka:9092"]
      interval: 5s
      timeout: 10s
      retries: 10
  # # Create a topic with 1 partition and 1 replica
  # init-kafka:
  #   image: bitnami/kafka:latest
  #   command: >
  #     sh -c "until kafka-topics.sh --list --bootstrap-server kafka:9092; do echo 'Waiting for Kafka...'; sleep 2; done && kafka-topics.sh --create --topic report-tasks --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 || true"
  #   depends_on:
  #     kafka:
  #       condition: service_healthy


  # # Create a topic with 10 partitions and 1 replica
  init-kafka:
    image: bitnami/kafka:latest
    command: >
      sh -c "until kafka-topics.sh --list --bootstrap-server kafka:9092; do echo 'Waiting for Kafka...'; sleep 2; done && kafka-topics.sh --create --topic report-tasks --bootstrap-server kafka:9092 --partitions 10 --replication-factor 1 || true"
    depends_on:
      kafka:
        condition: service_healthy

  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKER=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      init-kafka:
        condition: service_started

  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    environment:
      - KAFKA_BROKER=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      init-kafka:
        condition: service_started